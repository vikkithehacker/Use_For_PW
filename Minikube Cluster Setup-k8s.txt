Step-1.

Install kubectl on Ubuntu 22.04 LTS
Download kubectl binary with curl on Ubuntu using below command
$ curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl Make the kubectl binary executable
$chmod +x ./kubectl

Move kubectl to /usr/local/bin/kubectl directory
$sudo mv ./kubectl /usr/local/bin/kubectl
$ kubectl version
 

Step-2.

Install Docker on Ubuntu 22.04 LTS
Install below packages before installing docker, you can use official docker site
$ sudo apt-get install  ca-certificates curl gnupg lsb-release

Add Docker official GPG Key
$ sudo mkdir -p /etc/apt/keyrings
$ Curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

Setup Docker repository using below command
$ echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

Update the package to take effect
$sudo apt-get update

Install Docker on Ubuntu 22.04 LTS using below command
$ sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

To check docker service status on Ubuntu
$ sudo systemctl status docker

Create group named docker
$sudo groupadd docker

Configure to Run docker without sudo permission
$ sudo usermod -aG docker $USER && newgrp docker

To enable docker service at system startup
$ sudo systemctl enable docker

To check status of docker service
$ sudo systemctl status docker

To start/stop docker service
$ sudo systemctl start/stop docker


Step-3.
Install cri-dockerd on Ubuntu 22.04 LTS
The default network plugin for cri-dockerd is set to cni on Linux/Ubuntu for new Kubernetes version as you can follow GitHub Official repo for same
Clone the below git repo
$ git clone https://github.com/Mirantis/cri-dockerd.git
To install, on a Linux system that uses systemd, and already has Docker Engine installed
$ wget https://storage.googleapis.com/golang/getgo/installer_linux
$ chmod +x ./installer_linux
$ ./installer_linux
$ source ~/.bash_profile
$ cd cri-dockerd
$ mkdir bin
$ go build -o bin/cri-dockerd (Note: Please wait this command takes some time to complete.)
$ mkdir -p /usr/local/bin
$ sudo install -o root -g root -m 0755 bin/cri-dockerd /usr/local/bin/cri-dockerd
$ sudo cp -a packaging/systemd/* /etc/systemd/system
$ sudo sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
$ sudo systemctl daemon-reload
$ sudo systemctl enable cri-docker.service
$ sudo systemctl enable --now cri-docker.socket



Step-4.
Install conntrack package on Ubuntu 22.04 LTS
Install conntrack using apt for minikube on Ubuntu 22.04 LTS
$ sudo apt-get install -y conntrack

Install crictl package on Ubuntu 22.04 LTS
Install crictl: CLI for kubelet CRI on Ubuntu using below commands follow official crictl GitHub page

VERSION="v1.24.2"
$ wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
$ sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin
$ rm -f crictl-$VERSION-linux-amd64.tar.gz



Step6.
Download and Install Minikube on Ubuntu 22.04 LTS
Download and Install Minikube on Ubuntu 22.04 LTS using below commands, To download latest minikube setup refer minikube official download page

$ curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64

Make the minikube binary executable
$ chmod +x minikube

Move minikube to /usr/local/bin/kubectl directory
$ sudo mv minikube /usr/local/bin/

OR

You can use below command to download latest minikube
$ curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64

Install Minikube on Ubuntu 22.04 LTS AWS EC2
$ sudo install minikube-linux-amd64 /usr/local/bin/minikube

To check minikube version on ubuntu
$ minikube version


$ minikube start --network-plugin=cni --cni=calico

OR

$ minikube start --network-plugin=cni --cni=calico --wait=false

Error:
minikube v1.29.0 on Ubuntu 22.04 (xen/amd64)
Using the none driver based on user configuration
X Exiting due to GUEST_MISSING_CONNTRACK: Sorry, Kubernetes 1.22.3 requires conntrack to be installed in root's path

Solution:
$ sudo apt-get install -y conntrack

Now start the minikube on Ubuntu
$ minikube start --network-plugin=cni --cni=calico

Output:
 minikube start --network-plugin=cni --cni=calico
* minikube v1.29.0 on Ubuntu 22.04 (xen/amd64)
* Automatically selected the docker driver. Other choices: none, ssh
! With --network-plugin=cni, you will need to provide your own CNI. See --cni flag as a user-friendly alternative
* Using Docker driver with root privileges
* Starting control plane node minikube in cluster minikube
* Pulling base image ...
* Downloading Kubernetes v1.26.1 preload ...
    > preloaded-images-k8s-v18-v1...:  397.05 MiB / 397.05 MiB  100.00% 98.55 M
    > gcr.io/k8s-minikube/kicbase...:  407.18 MiB / 407.19 MiB  100.00% 17.17 M
* Creating docker container (CPUs=2, Memory=2200MB) ...
* Preparing Kubernetes v1.26.1 on Docker 20.10.23 ...
  - Generating certificates and keys ...
  - Booting up control plane ...
  - Configuring RBAC rules ...
* Configuring Calico (Container Networking Interface) ...
  - Using image gcr.io/k8s-minikube/storage-provisioner:v5
* Verifying Kubernetes components...
* Enabled addons: storage-provisioner, default-storageclass
* Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
To Check the status of Minikube


$ minikube status
minikube
type: Control Plane
host: Running
kubelet: Running
apiserver: Running
kubeconfig: Configured

To check Minikube cluster information
$ kubectl cluster-info
Kubernetes control plane is running at https://192.168.49.2:8443
CoreDNS is running at https://192.168.49.2:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
To check minikube cluster nodes status
$ kubectl get nodes

To view minikube cluster events
$ kubectl get events

